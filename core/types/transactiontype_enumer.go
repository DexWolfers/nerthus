// Code generated by "enumer -type=TransactionType -json -transform=snake -trimprefix=TransactionType"; DO NOT EDIT.

package types

import (
	"encoding/json"
	"fmt"
)

const _TransactionTypeName = "transfercontract_deploycontract_runproposal_council_applyproposal_council_removeproposal_set_configproposal_sys_campaignproposal_uc_campaignproposal_council_voteproposal_public_voteproposal_campaign_joinproposal_campaign_add_marginproposal_finalizewitness_applywitness_replacewitness_cancelsettlementall"

var _TransactionTypeIndex = [...]uint16{0, 8, 23, 35, 57, 80, 99, 120, 140, 161, 181, 203, 231, 248, 261, 276, 290, 300, 303}

func (i TransactionType) String() string {
	i -= 1
	if i >= TransactionType(len(_TransactionTypeIndex)-1) {
		return fmt.Sprintf("TransactionType(%d)", i+1)
	}
	return _TransactionTypeName[_TransactionTypeIndex[i]:_TransactionTypeIndex[i+1]]
}

var _TransactionTypeValues = []TransactionType{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}

var _TransactionTypeNameToValueMap = map[string]TransactionType{
	_TransactionTypeName[0:8]:     1,
	_TransactionTypeName[8:23]:    2,
	_TransactionTypeName[23:35]:   3,
	_TransactionTypeName[35:57]:   4,
	_TransactionTypeName[57:80]:   5,
	_TransactionTypeName[80:99]:   6,
	_TransactionTypeName[99:120]:  7,
	_TransactionTypeName[120:140]: 8,
	_TransactionTypeName[140:161]: 9,
	_TransactionTypeName[161:181]: 10,
	_TransactionTypeName[181:203]: 11,
	_TransactionTypeName[203:231]: 12,
	_TransactionTypeName[231:248]: 13,
	_TransactionTypeName[248:261]: 14,
	_TransactionTypeName[261:276]: 15,
	_TransactionTypeName[276:290]: 16,
	_TransactionTypeName[290:300]: 17,
	_TransactionTypeName[300:303]: 18,
}

// TransactionTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func TransactionTypeString(s string) (TransactionType, error) {
	if val, ok := _TransactionTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to TransactionType values", s)
}

// TransactionTypeValues returns all values of the enum
func TransactionTypeValues() []TransactionType {
	return _TransactionTypeValues
}

// IsATransactionType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i TransactionType) IsATransactionType() bool {
	for _, v := range _TransactionTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for TransactionType
func (i TransactionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for TransactionType
func (i *TransactionType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("TransactionType should be a string, got %s", data)
	}

	var err error
	*i, err = TransactionTypeString(s)
	return err
}
